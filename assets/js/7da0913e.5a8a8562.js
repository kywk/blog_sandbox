"use strict";(self.webpackChunkkywk_moco=self.webpackChunkkywk_moco||[]).push([[1701],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return h}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),p=u(n),h=a,m=p["".concat(s,".").concat(h)]||p[h]||c[h]||l;return n?r.createElement(m,o(o({ref:t},d),{},{components:n})):r.createElement(m,o({ref:t},d))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=p;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},5162:function(e,t,n){n.d(t,{Z:function(){return o}});var r=n(7294),a=n(6010),l="tabItem_Ymn6";function o(e){var t=e.children,n=e.hidden,o=e.className;return r.createElement("div",{role:"tabpanel",className:(0,a.Z)(l,o),hidden:n},t)}},5488:function(e,t,n){n.d(t,{Z:function(){return h}});var r=n(3117),a=n(7294),l=n(6010),o=n(2389),i=n(7392),s=n(7094),u=n(2466),d="tabList__CuJ",c="tabItem_LNqP";function p(e){var t,n,o=e.lazy,p=e.block,h=e.defaultValue,m=e.values,g=e.groupId,f=e.className,v=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),b=null!=m?m:v.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),N=(0,i.l)(b,(function(e,t){return e.value===t.value}));if(N.length>0)throw new Error('Docusaurus error: Duplicate values "'+N.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===h?h:null!=(t=null!=h?h:null==(n=v.find((function(e){return e.props.default})))?void 0:n.props.value)?t:v[0].props.value;if(null!==k&&!b.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+b.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var L=(0,s.U)(),A=L.tabGroupChoices,T=L.setTabGroupChoices,y=(0,a.useState)(k),V=y[0],x=y[1],w=[],I=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=g){var S=A[g];null!=S&&S!==V&&b.some((function(e){return e.value===S}))&&x(S)}var _=function(e){var t=e.currentTarget,n=w.indexOf(t),r=b[n].value;r!==V&&(I(t),x(r),null!=g&&T(g,String(r)))},H=function(e){var t,n=null;switch(e.key){case"ArrowRight":var r,a=w.indexOf(e.currentTarget)+1;n=null!=(r=w[a])?r:w[0];break;case"ArrowLeft":var l,o=w.indexOf(e.currentTarget)-1;n=null!=(l=w[o])?l:w[w.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:(0,l.Z)("tabs-container",d)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,l.Z)("tabs",{"tabs--block":p},f)},b.map((function(e){var t=e.value,n=e.label,o=e.attributes;return a.createElement("li",(0,r.Z)({role:"tab",tabIndex:V===t?0:-1,"aria-selected":V===t,key:t,ref:function(e){return w.push(e)},onKeyDown:H,onFocus:_,onClick:_},o,{className:(0,l.Z)("tabs__item",c,null==o?void 0:o.className,{"tabs__item--active":V===t})}),null!=n?n:t)}))),o?(0,a.cloneElement)(v.filter((function(e){return e.props.value===V}))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},v.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==V})}))))}function h(e){var t=(0,o.Z)();return a.createElement(p,(0,r.Z)({key:String(t)},e))}},3426:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return d},default:function(){return g},frontMatter:function(){return u},metadata:function(){return c},toc:function(){return h}});var r=n(3117),a=n(102),l=(n(7294),n(3905)),o=n(5488),i=n(5162),s=["components"],u={title:"[DS] AVL Tree",tags:["bootcamp","algorithm","cs","leetcode"],date:new Date("2022-06-02T00:00:00.000Z"),categories:["algorithm"]},d="[DS] AVL Tree",c={unversionedId:"bootcamp/cs_algorithm/avl",id:"bootcamp/cs_algorithm/avl",title:"[DS] AVL Tree",description:"[DS] AVL Tree",source:"@site/docs/bootcamp/cs_algorithm/avl.md",sourceDirName:"bootcamp/cs_algorithm",slug:"/bootcamp/cs_algorithm/avl",permalink:"/moco/docs/bootcamp/cs_algorithm/avl",draft:!1,tags:[{label:"bootcamp",permalink:"/moco/docs/tags/bootcamp"},{label:"algorithm",permalink:"/moco/docs/tags/algorithm"},{label:"cs",permalink:"/moco/docs/tags/cs"},{label:"leetcode",permalink:"/moco/docs/tags/leetcode"}],version:"current",frontMatter:{title:"[DS] AVL Tree",tags:["bootcamp","algorithm","cs","leetcode"],date:"2022-06-02T00:00:00.000Z",categories:["algorithm"]},sidebar:"tutorialSidebar",previous:{title:"Awesome Resources",permalink:"/moco/docs/bootcamp/cs_algorithm/awesome"},next:{title:"[DS] Binary Search Tree",permalink:"/moco/docs/bootcamp/cs_algorithm/bst"}},p={},h=[{value:"AVL Tree",id:"avl-tree",level:2},{value:"height(v)",id:"heightv",level:3},{value:"rebalance",id:"rebalance",level:3},{value:"rotate Left/Right",id:"rotate-leftright",level:3},{value:"insert(v)",id:"insertv",level:3},{value:"remove(v)",id:"removev",level:3},{value:"\u5c0f\u7d50",id:"\u5c0f\u7d50",level:2},{value:"See Also",id:"see-also",level:2},{value:"AVL",id:"avl",level:3},{value:"Inheritance \u7e7c\u627f",id:"inheritance-\u7e7c\u627f",level:3}],m={toc:h};function g(e){var t=e.components,n=(0,a.Z)(e,s);return(0,l.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"ds-avl-tree"},"[DS]"," AVL Tree"),(0,l.kt)("h2",{id:"avl-tree"},"AVL Tree"),(0,l.kt)("p",null,"A balanced BST is a BST that h = O(log N).\nAVL Tree (Adelson-Velskii & Landis, 1962) that is named after its\ninventor: Adelson-Velskii and Landis."),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"type AVLNode struct {\n  value  int\n  height int\n  left   *AVLNode\n  right  *AVLNode\n}\n\nfunc newAVLNode(v int) *AVLNode {\n  return &AVLNode{\n    value:  v,\n    height: 1,\n    left:   nil,\n    right:  nil,\n  }\n}\n"))),(0,l.kt)(i.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"class AVL extends BST {\n  constructor(data) {\n    super()\n    this.root = null\n    if (typeof(data) === 'number') {\n      this.root = new AVLNode(data)\n    } else if (Array.isArray(data)) {\n      this.root = new AVLNode(data[0])\n      for (let i = 1; i < data.length; i++)\n        this.insert(data[i])\n    }\n  }\n}\n\nclass AVLNode extends BSTNode {\n  constructor(data) {\n    super()\n    this.value = data\n    this.left = null\n    this.right = null\n    this.height = 1\n  }\n}\n"))),(0,l.kt)(i.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"export class AVL extends BST {\n  constructor(data: number | Array<number>) {\n    super(null)\n    this.root = null\n    if (typeof (data) === 'number') {\n      this.root = new AVLNode(data)\n    } else if (Array.isArray(data)) {\n      this.root = new AVLNode(data[0])\n      for (let i = 1; i < data.length; i++)\n        this.insert(data[i])\n    }\n  }\n}\n\nexport class AVLNode extends BSTNode {\n  left: IAVLNode\n  right: IAVLNode\n  height: number\n\n  constructor(data: number) {\n    super(data)\n    this.left = null\n    this.right = null\n    this.height = 1\n  }\n}\n"))),(0,l.kt)(i.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"")))),(0,l.kt)("h3",{id:"heightv"},"height(v)"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"height(v)"),": The number of edges on the path from vertex v down to\nits deepest leaf. This attribute is saved in each vertex so we can\naccess a vertex's height in ",(0,l.kt)("strong",{parentName:"p"},"O(1)")," without having to recompute it\nevery time."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"v.height = -1 (if v is an empty tree)\nv.height = max(v.left.height, v.right.height) + 1 (otherwise)\n\n// Balance Factor\nv.bf = v.left.height - v.right.height\n")),(0,l.kt)("h3",{id:"rebalance"},"rebalance"),(0,l.kt)("p",null,"AVL Tree needs to check if still balance after modified"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"check balance factor of this and its children\n  case1: this.rotateRight\n  case2: this.left.rotateLeft, this.rotateRight\n  case3: this.rotateLeft\n  case4: this.right.rotateRight, this.rotateLeft\n  this is balanced\n")),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (n *AVLNode) rotate() *AVLNode {\n  left := n.left.getHeight()\n  right := n.right.getHeight()\n  bf := left - right\n\n  if bf > 1 {\n    if n.left.left.getHeight() < n.left.right.getHeight() {\n      n.left = n.left.rotateLeft()\n    }\n    return n.rotateRight()\n  } else if bf < -1 {\n    if n.right.left.getHeight() > n.right.right.getHeight() {\n      n.right = n.right.rotateRight()\n    }\n    return n.rotateLeft()\n  } else {\n    n.updateHeight()\n    return n\n  }\n}\n"))),(0,l.kt)(i.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"  // class AVLNode\n  static _rotate(node) {\n    let left = AVLNode._heightHelper(node.left)\n    let right = AVLNode._heightHelper(node.right)\n    let bf = left - right\n\n    if (bf > 1) {\n      if (AVLNode._heightHelper(node.left.left) < AVLNode._heightHelper(node.left.right))\n        node.left = AVLNode._rotateLeft(node.left)\n      return AVLNode._rotateRight(node)\n    } else if (bf < -1) {\n      if (AVLNode._heightHelper(node.right.left) > AVLNode._heightHelper(node.right.right))\n        node.right = AVLNode._rotateRight(node.right)\n      return AVLNode._rotateLeft(node)\n    } else {\n      node._updateHeight()\n      return node\n    }\n  }\n"))),(0,l.kt)(i.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"  static rotate(node: IAVLNode): IAVLNode {\n    let left = AVLNode.heightHelper(node!.left)\n    let right = AVLNode.heightHelper(node!.right)\n    let bf = left - right\n\n    if (bf > 1) {\n      if (AVLNode.heightHelper(node!.left!.left) < AVLNode.heightHelper(node!.left!.right))\n        node!.left = AVLNode.rotateLeft(node!.left)\n      return AVLNode.rotateRight(node)\n    } else if (bf < -1) {\n      if (AVLNode.heightHelper(node!.right!.left) > AVLNode.heightHelper(node!.right!.right))\n        node!.right = AVLNode.rotateRight(node!.right)\n      return AVLNode.rotateLeft(node)\n    } else {\n      node!.updateHeight()\n      return node\n    }\n  }\n"))),(0,l.kt)(i.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"")))),(0,l.kt)("h3",{id:"rotate-leftright"},"rotate Left/Right"),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (n *AVLNode) rotateLeft() *AVLNode {\n  result := n.right\n  t := result.left\n\n  n.right = t\n  n.height--\n\n  result.left = n\n  return result\n}\n\nfunc (n *AVLNode) rotateRight() *AVLNode {\n  result := n.left\n  t := result.right\n\n  n.left = t\n  n.height--\n\n  result.right = n\n  return result\n}\n"))),(0,l.kt)(i.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"  // class AVLNode\n  static _rotateLeft(node) {\n    let result = node.right\n    let t = result.left\n\n    node.right = t\n    node.height--\n\n    result.left = node\n    return result\n  }\n\n  static _rotateRight(node) {\n    let result = node.left\n    let t = result.right\n\n    node.left = t\n    node.height--\n\n    result.right = node\n    return result\n  }\n"))),(0,l.kt)(i.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"  // class AVLNode\n  static rotateLeft(node: IAVLNode): IAVLNode {\n    let result = node!.right\n    let t = result!.left\n\n    node!.right = t\n    node!.height--\n\n    result!.left = node\n    return result\n  }\n\n  static rotateRight(node: IAVLNode): IAVLNode {\n    let result = node!.left\n    let t = result!.right\n\n    node!.left = t\n    node!.height--\n\n    result!.right = node\n    return result\n  }\n"))),(0,l.kt)(i.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"")))),(0,l.kt)("h3",{id:"insertv"},"insert(v)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"insert v\nrebalance tree\n")),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (n *AVLNode) insert(val int) IBSTNode {\n  return n.insertHelper(val)\n}\n\nfunc (n *AVLNode) insertHelper(val int) *AVLNode {\n  if n == nil { return newAVLNode(val) }\n\n  if n.value > val { n.left = n.left.insertHelper(val) } \n  else { n.right = n.right.insertHelper(val) }\n\n  return n.rotate()\n}\n"))),(0,l.kt)(i.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"  // class AVLNode\n  insert(val) {\n    return AVLNode._insertHelper(val, this)\n  }\n\n  static _insertHelper(val, node) {\n    if (node === null)\n      return new AVLNode(val)\n\n    if (node.value > val)\n      node.left = AVLNode._insertHelper(val, node.left)\n    else\n      node.right = AVLNode._insertHelper(val, node.right)\n\n    return AVLNode._rotate(node)\n  }\n"))),(0,l.kt)(i.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"  // class AVLNode\n  public insert(val: number): IAVLNode {\n    return AVLNode.insertHelper(val, this)\n  }\n\n  static insertHelper(val: number, node: IAVLNode): IAVLNode {\n    if (node === null)\n      return new AVLNode(val)\n\n    if (node.value > val)\n      node.left = AVLNode.insertHelper(val, node.left)\n    else\n      node.right = AVLNode.insertHelper(val, node.right)\n\n    return AVLNode.rotate(node)\n  }\n"))),(0,l.kt)(i.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"")))),(0,l.kt)("h3",{id:"removev"},"remove(v)"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-text"},"remove v\nrebalance tree\n")),(0,l.kt)(o.Z,{mdxType:"Tabs"},(0,l.kt)(i.Z,{value:"go",label:"Go",default:!0,mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-go"},"func (n *AVLNode) remove(val int) IBSTNode {\n  return n.removeHelper(val)\n}\n\nfunc (n *AVLNode) removeHelper(val int) *AVLNode {\n  // remove v: same as BSTNode \n  // ,,,\n  return n.rotate()\n}\n"))),(0,l.kt)(i.Z,{value:"js",label:"JavaScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-js"},"  remove (val) {\n    return AVLNode._removeHelper(val, this)\n  }\n\n  static _removeHelper(val, node) {\n    // remove v: same as BSTNode \n    // ,,,\n    return AVLNode._rotate(node)\n  }\n"))),(0,l.kt)(i.Z,{value:"ts",label:"TypeScript",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"  public remove (val: number): IAVLNode {\n    return AVLNode.removeHelper(val, this)\n  }\n\n  static removeHelper(val:number, node: IAVLNode): IAVLNode {\n    // remove v: same as BSTNode \n    // ,,,\n    return AVLNode.rotate(node)\n  }\n"))),(0,l.kt)(i.Z,{value:"python",label:"Python",mdxType:"TabItem"},(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"")))),(0,l.kt)("h2",{id:"\u5c0f\u7d50"},"\u5c0f\u7d50"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"/moco/docs/bootcamp/cs_algorithm/heap"},"Binary Heap")," \u4e00\u4e9b\u7279\u6027\u9069\u5408\u7df4\u7fd2\u8207\u89e3\u91cb Class \u4e2d\u7684 private / public / class method.\n\u800c BST / AVL Tree \u5247\u5f88\u9069\u5408 OOP \u4e2d\u7684\u7e7c\u627f\u548c\u5c01\u88dd\u6982\u5ff5. "),(0,l.kt)("p",null,"AVL Tree \u4ea6\u662f\u4e00\u7a2e BST, \u6240\u6709\u5c0d BST \u7684\u64cd\u4f5c\u90fd\u9069\u7528\u65bc AVL Tree.\n\u9069\u5408\u985e\u5225\u754c\u9762\u5c01\u88dd\u6982\u5ff5. \u64cd\u4f5c\u6642\u7121\u9808\u8003\u616e\u662f\u7531\u90a3\u4e00\u7a2e Tree \u5be6\u4f5c, \u900f\u904e\u985e\u5225\u5c01\u88dd\u754c\u9762\u64cd\u4f5c\u5373\u53ef. "),(0,l.kt)("p",null,"\u53e6\u4e00\u9ede\u5247\u662f\u5be6\u4f5c\u4e0a AVL Tree \u4e2d\u8a31\u591a\u51fd\u5f0f\u90fd\u53ef\u4ee5\u76f4\u63a5\u6cbf\u7528 BST \u754c\u9762,\n\u9069\u5408\u7528\u7e7c\u627f\u5df2\u5229\u7a0b\u5f0f\u91cd\u8907\u4f7f\u7528\u8207\u7dad\u8b77."),(0,l.kt)("p",null,"\u9019\u7bc7\u76e1\u91cf\u4ee5\u5404\u8a9e\u8a00\u4e2d\u539f\u751f\u6216\u6a21\u64ec\u7e7c\u627f\u7684\u65b9\u5f0f\u5be6\u4f5c AVL \u5c0d BST \u7684\u7e7c\u627f.\n\u800c\u9650\u65bc Golang \u7684\u7279\u6027, \u7e7c\u627f\u548c Overriding \u6703\u8b93\u7a0b\u5f0f\u8b8a\u5f97\u904e\u65bc\u8907\u96dc,\n\u53cd\u5012\u5931\u53bb Golang keep in simple \u54f2\u5b78, \u50c5\u7528 interface \u4f86\u5c01\u88dd AVL Tree Node."),(0,l.kt)("h2",{id:"see-also"},"See Also"),(0,l.kt)("h3",{id:"avl"},"AVL"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://visualgo.net/en/bst"},"Binary Search Tree, AVL Tree - VisuAlgo"))),(0,l.kt)("h3",{id:"inheritance-\u7e7c\u627f"},"Inheritance \u7e7c\u627f"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Golang",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://opensourcedoc.com/golang-programming/interface/"},"[Golang] \u7a0b\u5f0f\u8a2d\u8a08\u6559\u5b78\uff1a\u7528\u4ecb\u9762 (Interface) \u5be6\u8e10\u7e7c\u627f\u548c\u591a\u578b | \u958b\u6e90\u6280\u8853\u6559\u5b78\u7db2")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://learnku.com/articles/32295"},"\u79d2\u61c2 go \u8bed\u8a00\u7684\u7ee7\u627f | Go \u6280\u672f\u8bba\u575b"),"  "),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://www.gushiciku.cn/pl/2txm/zh-tw"},"Golang OOP\u3001\u7e7c\u627f\u3001\u7d44\u5408\u3001\u4ecb\u9762_Go\u8a9e\u8a00\u4e2d\u6587\u7db2 - MdEditor"))))))}g.isMDXComponent=!0}}]);